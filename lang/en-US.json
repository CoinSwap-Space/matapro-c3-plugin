{
  "languageTag": "en-US",
  "fileDescription": "Strings for Metapro Plugin.",
  "text": {
    "plugins": {
      "metaproplugin": {
        "name": "Metapro Plugin",
        "description": "Metapro Plugin addon for Web3 connection, user management, and leaderboard integration.",
        "help-url": "https://metapro.one/",
        "properties": {
          "users-service-api-url": {
            "name": "Users Service API URL",
            "desc": "The URL of the Users Service API used by the Metapro system."
          },
          "project-id": {
            "name": "Project ID",
            "desc": "The unique identifier for your project in Metapro."
          },
          "leaderboard-id": {
            "name": "Leaderboard ID",
            "desc": "The ID of the leaderboard used in the Metapro system."
          },
          "referral-leaderboard-id": {
            "name": "Referral leaderboard ID",
            "desc": "The ID of the referral leaderboard used in the Metapro system."
          },
          "leaderboard-api-key": {
            "name": "Leaderboard API Key",
            "desc": "The API key required to access the leaderboard."
          },
          "leaderboard-api-url": {
            "name": "Leaderboard API URL",
            "desc": "The URL of the Leaderboard API used in the Metapro system."
          },
          "referral-api-url": {
            "name": "Referral API URL",
            "desc": "The URL of the referral API used in the Metapro system."
          },
          "map-id": {
            "name": "Map ID",
            "desc": "The ID of generated map."
          }
        },
        "aceCategories": {
          "products": "Products"
        },
        "conditions": {
          "on-account-received": {
            "list-name": "On Account Received",
            "display-text": "When an account is received",
            "description": "Triggered when the user's Ethereum account is successfully retrieved."
          },
          "on-user-logged-in": {
            "list-name": "On User Logged In",
            "display-text": "When a user is logged in",
            "description": "Triggered when the user is successfully logged in."
          },
          "on-leaderboard-received": {
            "list-name": "On Leaderboard Received",
            "display-text": "When leaderboard data is received",
            "description": "Triggered when leaderboard data is successfully retrieved."
          },
          "on-username-updated": {
            "list-name": "On Username Updated",
            "display-text": "When username is updated",
            "description": "Triggered when username is successfully updated."
          },
          "on-avatar-updated": {
            "list-name": "On Avatar Updated",
            "display-text": "When avatar is updated",
            "description": "Triggered when avatar is successfully updated."
          },
          "on-is-registered": {
            "list-name": "On Is User Registered",
            "display-text": "When the user is registered.",
            "description": "Triggered when it is confirmed that the user is registered in the system."
          },
          "on-is-not-registered": {
            "list-name": "On User Not Registered",
            "display-text": "When the user is not registered.",
            "description": "Triggered when it is confirmed that the user is not registered in the system."
          },
          "on-user-score-received": {
            "list-name": "On User Score Received",
            "display-text": "When user scores data is received.",
            "description": "Triggered if scores data is successfully received."
          },
          "on-referral-code-exists": {
            "list-name": "On Referral Code Exists",
            "display-text": "When user's referral code exists.",
            "description": "Triggered if referral data is successfully received and user has assigned referral code."
          },
          "on-referral-code-empty": {
            "list-name": "On Referral Code Empty",
            "display-text": "When user's referral code is empty.",
            "description": "Triggered if referral data is successfully received and user doesn't have referral code."
          },
          "on-referral-code-generated": {
            "list-name": "On Referral Code Generated",
            "display-text": "Triggered when the user's referral code is generated.",
            "description": "Triggered when a new referral code is successfully generated for the user."
          },
          "on-referral-structure-received": {
            "list-name": "On Referral Structure Received",
            "display-text": "Triggered when the user's referral structure is received.",
            "description": "Triggered when the referral structure data is successfully received."
          },
          "on-error": {
            "list-name": "On Error",
            "display-text": "When an error occurs",
            "description": "Triggered when an error occurs during any plugin operation."
          },
          "on-best-score-received": {
            "list-name": "On Best Score Received",
            "display-text": "Triggered when the user's best score is received.",
            "description": "Triggered when the best score data for the user is successfully retrieved."
          },
          "on-best-scores-leaderboard-received": {
            "list-name": "On Best Scores Leaderboard Received",
            "display-text": "Triggered when the best scores leaderboard is received.",
            "description": "Triggered when the best scores leaderboard data is successfully retrieved."
          },
          "on-referral-leaderboard-received": {
            "list-name": "On Referral Leaderboard Received",
            "display-text": "Triggered when the referral leaderboard is received.",
            "description": "Triggered when the referral leaderboard data is successfully retrieved."
          }
        },
        "actions": {
          "request-account": {
            "list-name": "Request Account",
            "display-text": "Request account",
            "description": "Requests the user's Ethereum account from the connected wallet."
          },
          "login": {
            "list-name": "Login",
            "display-text": "Login user with referral settings ID {0}, referral code {1}, and rules checked {2}",
            "description": "Logs in the user using their Ethereum account. Optionally includes a referral code and checks if rules are accepted.",
            "params": {
              "referral-settings-id": {
                "name": "Referral Settings ID",
                "desc": "The ID for the referral settings configured in the project."
              },
              "referral-code": {
                "name": "Referral Code",
                "desc": "The referral code provided by the user, if any."
              },
              "rules-checked": {
                "name": "Rules Checked",
                "desc": "Indicates whether the user has accepted the rules."
              }
            }
          },
          "request-leaderboard": {
            "list-name": "Request Leaderboard",
            "display-text": "Request leaderboard with limit {0}, minimum balance {1} and maximum balance {2}",
            "description": "Requests leaderboard data for a specific score range with a defined limit.",
            "params": {
              "limit": {
                "name": "Limit",
                "desc": "The maximum number of leaderboard entries to retrieve."
              },
              "min-balance": {
                "name": "Min Balance",
                "desc": "Minimum balance to display."
              },
              "max-balance": {
                "name": "Max Balance",
                "desc": "Maximum balance to display."
              }
            }
          },
          "update-score": {
            "list-name": "Update Score",
            "display-text": "Update user score with {0}",
            "description": "Updates user score.",
            "params": {
              "score": {
                "name": "Score",
                "desc": "The score value to be updated for the user."
              }
            }
          },
          "update-username": {
            "list-name": "Update Username",
            "display-text": "Update username to {0}",
            "description": "Updates username.",
            "params": {
              "username": {
                "name": "Username",
                "desc": "The new value for username."
              }
            }
          },
          "update-avatar": {
            "list-name": "Update Avatar",
            "display-text": "Update user avatar to {0}",
            "description": "Updates user avatar.",
            "params": {
              "avatar": {
                "name": "Avatar URL",
                "desc": "The new avatar URL."
              }
            }
          },
          "check-if-registered": {
            "list-name": "Check If Registered",
            "display-text": "Check if user is already registered.",
            "description": "Checks if the user's account is already registered in the system."
          },
          "request-user-score": {
            "list-name": "Request User Score",
            "display-text": "Requests user score.",
            "description": "Requests user current and total score within provided leaderboard."
          },
          "fetch-referral-code": {
            "list-name": "Fetch Referral Code",
            "display-text": "Requests user's referral code.",
            "description": "Requests user's referral code from referral system."
          },
          "generate-referral-code": {
            "list-name": "Generate Referral Code",
            "display-text": "Generate a referral code for the user.",
            "description": "Generates a unique referral code associated with the user's userId."
          },
          "request-referral-structure": {
            "list-name": "Request Referral Structure",
            "display-text": "Request the referral structure for the user.",
            "description": "Retrieves the referral downline structure, including level, total score, user count, and percentage of each level in the referral system."
          },
          "add-score": {
            "list-name": "Add score",
            "display-text": "Add score {0}",
            "description": "Add a new entry score for user.",
            "params": {
              "score": {
                "name": "Score",
                "desc": "The score earned by the user."
              }
            }
          },
          "request-best-score": {
            "list-name": "Request Best Score",
            "display-text": "Request the best score for the user.",
            "description": "Retrieves the highest score achieved by the user."
          },
          "request-best-scores-leaderboard-by-map-id": {
            "list-name": "Request Best Scores Leaderboard",
            "display-text": "Request the best scores leaderboard with limit {0}",
            "description": "Requests the leaderboard data showing the best scores for a specific map, with an optional limit.",
            "params": {
              "limit": {
                "name": "Limit",
                "desc": "The maximum number of leaderboard entries to retrieve."
              }
            }
          },
          "request-referral-leaderboard": {
            "list-name": "Request Referral Leaderboard",
            "display-text": "Request referral leaderboard with ID {0}, API key {1}, limit {2}, minimum balance {3}, and maximum balance {4}",
            "description": "Requests referral leaderboard data for a specific score range with a defined limit.",
            "params": {
              "ref-leaderboard-id": {
                "name": "Referral Leaderboard ID",
                "desc": "The unique identifier for the referral leaderboard."
              },
              "ref-leaderboard-api-key": {
                "name": "Referral Leaderboard API Key",
                "desc": "The API key required to access the referral leaderboard."
              },
              "limit": {
                "name": "Limit",
                "desc": "The maximum number of leaderboard entries to retrieve."
              },
              "min-balance": {
                "name": "Min Balance",
                "desc": "Minimum balance to display."
              },
              "max-balance": {
                "name": "Max Balance",
                "desc": "Maximum balance to display."
              }
            }
          }
        },
        "expressions": {
          "get-last-error": {
            "description": "Get the most recent error message encountered by the plugin.",
            "translated-name": "Get Last Error",
            "params": {}
          },
          "get-account": {
            "description": "Get the current user's Ethereum account.",
            "translated-name": "Get Account",
            "params": {}
          },
          "get-avatar": {
            "description": "Get the user's avatar URL.",
            "translated-name": "Get Avatar",
            "params": {}
          },
          "get-user-id": {
            "description": "Get the user's unique ID.",
            "translated-name": "Get User ID",
            "params": {}
          },
          "get-username": {
            "description": "Get the user's username.",
            "translated-name": "Get Username",
            "params": {}
          },
          "get-access-token": {
            "description": "Get the user's Web3 access token.",
            "translated-name": "Get Access Token",
            "params": {}
          },
          "get-leaderboard": {
            "description": "Get the general leaderboard data.",
            "translated-name": "Get Leaderboard",
            "params": {}
          },
          "get-current-score": {
            "description": "Get the user's current score.",
            "translated-name": "Get Current Score",
            "params": {}
          },
          "get-total-score": {
            "description": "Get the user's total score.",
            "translated-name": "Get Total Score",
            "params": {}
          },
          "get-referral-code": {
            "description": "Get the user's referral code.",
            "translated-name": "Get Referral Code",
            "params": {}
          },
          "get-referral-structure": {
            "description": "Get the user's referral downline structure.",
            "translated-name": "Get Referral Downline Structure",
            "params": {}
          },
          "get-best-score": {
            "description": "Get the user's highest score.",
            "translated-name": "Get Best Score",
            "params": {}
          },
          "get-best-scores-leaderboard": {
            "description": "Get the leaderboard showing the user's highest scores.",
            "translated-name": "Get Best Scores Leaderboard",
            "params": {}
          },
          "get-referral-leaderboard": {
            "description": "Get the leaderboard showing the user's referral-based scores.",
            "translated-name": "Get Referral Leaderboard",
            "params": {}
          }
        }
      }
    }
  }
}
